/* @jsxImportSource react */
'use client';

import * as React from 'react';
import MPCard from '@/components/mp/MPCard';

type MP = any;
type MPListData = { items: MP[]; total: number };

export default function MPList({ data }: { data: MPListData }) {
  // SSR payload (never lost)
  const serverItems = data?.items ?? [];
  const [clientData, setClientData] = React.useState<MPListData>(data || { items: [], total: 0 });

  // Prefer server on first paint, fall back to client when/if it updates
  const items = (serverItems && serverItems.length ? serverItems : (clientData?.items ?? []));
  const showSkel = !items || items.length === 0;

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      {/* Results grid */}
      <ul className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-6">
        {showSkel
          ? Array.from({ length: 8 }).map((_, i) => (
              <li key={'skel'+i} className="min-h-[172px]">
                <div className="rounded-xl border border-zinc-800 bg-zinc-900 p-4 animate-pulse">
                  <div className="h-5 w-40 bg-zinc-700/50 rounded mb-3"></div>
                  <div className="h-4 w-28 bg-zinc-700/40 rounded mb-4"></div>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                    <div className="h-8 bg-zinc-700/30 rounded"></div>
                    <div className="h-8 bg-zinc-700/30 rounded"></div>
                    <div className="h-8 bg-zinc-700/30 rounded"></div>
                    <div className="h-8 bg-zinc-700/30 rounded"></div>
                  </div>
                </div>
              </li>
            ))
          : items.map((m: MP, idx: number) => (
              <li key={m?.slug || m?.id || idx} className="min-h-[172px]">
                <MPCard mp={m} />
              </li>
            ))
        }
      </ul>
    </div>
  );
}
