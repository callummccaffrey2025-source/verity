import * as React from "react";
import { Slot } from "@radix-ui/react-slot";

export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  asChild?: boolean;
  variant?: "primary"|"outline"|"ghost"|"secondary";
  size?: "sm"|"md"|"lg";
}
const variants = {
  primary:  "bg-indigo-500 text-white hover:bg-indigo-400",
  outline:  "border border-white/15 text-neutral-200 hover:bg-white/10",
  ghost:    "text-neutral-300 hover:text-white",
  secondary:"bg-white text-neutral-900 hover:bg-neutral-200",
};
const sizes = {
  sm: "h-8 px-3 text-sm",
  md: "h-10 px-4 text-sm",
  lg: "h-11 px-5 text-base",
};

export const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className="", asChild, variant="primary", size="md", ...props }, ref) => {
    const Comp = asChild ? Slot : "button";
    return (
      <Comp
        ref={ref}
        className={`inline-flex items-center justify-center rounded-lg font-medium transition-colors shadow-sm ${variants[variant]} ${sizes[size]} ${className}`}
        {...props}
      />
    );
  }
);
Button.displayName = "Button";
export default Button;
