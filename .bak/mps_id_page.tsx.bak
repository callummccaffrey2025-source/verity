import { notFound } from 'next/navigation';
import { listAllMPs, getMPBySlug } from '../../../lib/data/mps-all';
import type { MP } from '../../../lib/types/mp';
import { PartyBadge } from '../../../components/mp/Badge';
import { ReceiptsDrawer } from '../../../components/mp/ReceiptsDrawer';

export const revalidate = 3600;

export default async function MPProfilePage({ params }: { params: Promise<{ id: string }> }) {
  const { id } = await params;
  const mp: MP | null = await getMPBySlug(id);
  // Derived locals for mixed shapes
  const att12 = (mp as any)?.attendance?.last12mPct ?? (mp as any)?.attendance12m ?? null;
  const attOverall = (mp as any)?.attendance?.overallPct ?? (mp as any)?.attendanceOverall ?? null;
  const committeesCount = Array.isArray((mp as any)?.committees) ? (mp as any).committees.length : ((mp as any)?.committeesCount ?? 0);
  const rolesLine = (() => {
    const r = (mp as any)?.roles;
    if (Array.isArray(r)) return r.filter(Boolean).join(', ') || '—';
    if (typeof r === 'string') return r || '—';
    return '—';
  })();
  const receiptsSafe = Array.isArray((mp as any)?.receipts) ? (mp as any).receipts : [];
  const lastVote = (Array.isArray((mp as any)?.votes) && (mp as any).votes[0]?.position) ? (mp as any).votes[0].position : '—';
  if (!mp) return notFound();
  // Derived fallbacks for mixed data shapes (object vs flat) — safe on nulls
  const att12 =
    (mp as any)?.attendance?.last12mPct ?? (mp as any)?.attendance12m ?? null;
  const attOverall =
    (mp as any)?.attendance?.overallPct ?? (mp as any)?.attendanceOverall ?? null;
  const committeesCount = Array.isArray((mp as any)?.committees)
    ? (mp as any).committees.length
    : ((mp as any)?.committeesCount ?? 0);
  const lastVote = (Array.isArray((mp as any)?.votes) && (mp as any).votes[0]?.position)
    ? (mp as any).votes[0].position
    : '—';
  const rolesLine = (() => {
    const r = (mp as any)?.roles;
    if (Array.isArray(r)) return r.filter(Boolean).join(', ') || '—';
    if (typeof r === 'string') return r || '—';
    return '—';
  })();

  const receiptsSafe = Array.isArray((mp as any)?.receipts) ? (mp as any).receipts : [];
  return (
    <div className="min-h-screen bg-black text-zinc-100">
      <header className="sticky top-0 z-30 border-b border-zinc-900/60 bg-black/60 backdrop-blur">
        <div className="mx-auto flex max-w-6xl items-center justify-between px-4 py-3">
          <div className="flex items-center gap-3">
            <img alt={`${mp.name} portrait`} src={mp.portraitUrl?.trim() || null} className="h-12 w-10 rounded-md object-cover" />
            <div>
              <h1 className="text-lg font-semibold leading-tight">{mp.name}</h1>
              <div className="flex items-center gap-2 text-xs text-zinc-400"><PartyBadge party={mp.party} /> {mp.chamber} · {mp.electorate}</div>
            </div>
          </div>
          <div className="flex items-center gap-2 text-sm">
            <a className="rounded-lg border border-emerald-700/40 bg-emerald-900/10 px-3 py-1.5 text-emerald-200" href="#">Follow</a>
            <a className="rounded-lg border border-zinc-700 bg-zinc-900/40 px-3 py-1.5 text-zinc-200" href="#">Share</a>
          </div>
        </div>
      </header>

      <main className="mx-auto grid max-w-6xl grid-cols-1 gap-4 px-4 py-6 md:grid-cols-[1.2fr_1fr]">
        <section className="space-y-4">
          <article className="rounded-2xl border border-zinc-800 bg-zinc-900/40 p-4">
            <div className="text-sm font-semibold">Overview</div>
            <div className="mt-2 grid grid-cols-2 gap-2 text-sm text-zinc-300 md:grid-cols-4">
              <div>Attendance (12m) <span className="text-zinc-100 font-medium">{att12 == null || att12 === "" ? "—" : `%`}</span></div>
              <div>Overall attendance <span className="text-zinc-100 font-medium">{attOverall == null || attOverall === "" ? "—" : `%`}</span></div>
              <div>Rebellions (12m) <span className="text-zinc-100 font-medium">{mp.rebellions12m}</span></div>
              <div>Committees <span className="text-zinc-100 font-medium">{committeesCount}</span></div>
            </div>
            <div className="mt-3 text-xs text-zinc-400">Roles: {rolesLine}</div>
            <div className="mt-3"><ReceiptsDrawer items={receiptsSafe} /></div>
          </article>

          <article className="rounded-2xl border border-zinc-800 bg-zinc-900/40 p-4">
            <div className="mb-2 flex items-center justify-between">
              <div className="text-sm font-semibold">Voting record</div>
              <a className="text-emerald-300 text-sm" href="#">Export CSV</a>
            </div>
            <div className="overflow-x-auto">
              <table className="w-full text-sm">
                <thead className="text-zinc-400">
                  <tr>
                    <th scope="col" className="py-2 text-left">Date</th>
                    <th scope="col" className="py-2 text-left">Bill</th>
                    <th scope="col" className="py-2 text-left">Position</th>
                    <th scope="col" className="py-2 text-left">Division</th>
                    <th scope="col" className="py-2 text-left">Topics</th>
                    <th scope="col" className="py-2 text-left">Receipts</th>
                  </tr>
                </thead>
                <tbody>
                  {mp.votes.map((v, i) => (
                    <tr key={i} className="border-t border-zinc-800 text-zinc-200">
                      <td className="py-2 align-top">{v.date}</td>
                      <td className="py-2 align-top"><a className="text-emerald-300" href={`/bills/${v.billId}`}>{v.billTitle}</a></td>
                      <td className="py-2 align-top">{v.position}</td>
                      <td className="py-2 align-top">{v.division}</td>
                      <td className="py-2 align-top">{v.topics.join(', ')}</td>
                      <td className="py-2 align-top"><ReceiptsDrawer items={v.receipts} label="Open" /></td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </article>

          <article className="rounded-2xl border border-zinc-800 bg-zinc-900/40 p-4">
            <div className="text-sm font-semibold">Speeches & statements</div>
            <ul className="mt-2 space-y-2 text-sm text-zinc-200">
              {mp.speeches.map((s, i) => (
                <li key={i} className="rounded-lg border border-zinc-800 bg-zinc-900/40 p-3">
                  <div className="text-zinc-300">{s.date} — <a className="text-emerald-300" href={s.url}>{s.title}</a></div>
                  <div className="text-xs"><ReceiptsDrawer items={s.receipts} label="Receipts" /></div>
                </li>
              ))}
              {mp.speeches.length === 0 && <li className="text-zinc-400">No speeches recorded.</li>}
            </ul>
          </article>
        </section>

        <aside className="space-y-4">
          <article className="rounded-2xl border border-zinc-800 bg-zinc-900/40 p-4">
            <div className="text-sm font-semibold">Committees & roles</div>
            <ul className="mt-2 space-y-2 text-sm text-zinc-200">
              {mp.committees.map((c, i) => (
                <li key={i} className="flex items-center justify-between">
                  <div>{c.name} — {c.role}</div>
                  <div className="text-zinc-400">{c.attendancePct ? `${c.attendancePct : '—'}</div>
                </li>
              ))}
            </ul>
          </article>

          <article className="rounded-2xl border border-zinc-800 bg-zinc-900/40 p-4">
            <div className="text-sm font-semibold">Signals</div>
            <ul className="mt-2 space-y-2 text-sm text-zinc-200">
              {mp.signals.map((s, i) => (
                <li key={i} className="rounded-lg border border-zinc-800 bg-zinc-900/40 p-3">
                  <div className="text-zinc-200">{s.summary}</div>
                  <div className="text-xs text-zinc-400">{s.date ?? ''}</div>
                  <div className="text-xs"><ReceiptsDrawer items={s.receipts} label="Receipts" /></div>
                </li>
              ))}
              {mp.signals.length === 0 && <li className="text-zinc-400">No notable signals recorded.</li>}
            </ul>
          </article>

          <article className="rounded-2xl border border-zinc-800 bg-zinc-900/40 p-4">
            <div className="text-sm font-semibold">Money & interests</div>
            <div className="mt-2 text-sm text-emerald-300"><a href={mp.interestsUrl ?? '#'}>Register of interests ↗</a></div>
            <ul className="mt-2 space-y-2 text-sm text-zinc-200">
              {mp.donations?.map((d, i) => (
                <li key={i} className="flex items-center justify-between">
                  <div>${d.amount.toLocaleString()} — {d.source} — {d.date}</div>
                  <div className="text-xs"><ReceiptsDrawer items={d.receipts} label="Receipts" /></div>
                </li>
              ))}
            </ul>
          </article>
        </aside>
      </main>

      <footer className="border-t border-zinc-900/60 bg-black/60 py-6 text-sm text-zinc-400">
        <div className="mx-auto flex max-w-6xl items-center justify-between px-4">
          <div>© 2025 Verity</div>
          <div>Receipts • Ownership • Bias surfaced</div>
        </div>
      </footer>
    </div>
  );
}

export async function generateMetadata({ params }: { params: Promise<{ id: string }> }) {
  const { id } = await params;
  const { getMPBySlug } = await import('../../../lib/data/mps-all');
  const mp = await getMPBySlug(id);
  const title = mp ? `${mp.name} — MP profile • Verity` : `MP — Verity`;
  const description = mp
    ? `Profile for ${mp.name}. Party: ${mp.party || '—'}. Chamber: ${mp.chamber}. Electorate: ${mp.electorate || mp.state || '—'}.`
    : `MP profile on Verity.`;
  return { title, description, alternates: { canonical: `/mps/${id}` } };
}




export async function generateStaticParams() {
  const { listAllMPs } = await import('../../../lib/data/mps-all');
  const all = await listAllMPs();
  return all.map(m => ({ id: m.slug }));
}
