type PageProps = { searchParams?: Record<string, string | string[] | undefined> };
import ClusterCard from "@/components/ClusterCard";
import BillListItem from "@/components/BillListItem";
import { demoSearch } from "@/lib/search";
export default function Page({ searchParams }: PageProps){
  const q = typeof searchParams?.q === 'string' ? searchParams.q : '';
  const results = demoSearch(q);
  return (
    <main className="mx-auto max-w-6xl px-4 py-8">
      <h1 className="text-2xl font-semibold tracking-tight">Search</h1>
      <p className="mt-1 text-sm text-zinc-400">Query: <kbd className="rounded border border-zinc-700 px-1.5 py-0.5">{q || '—'}</kbd></p>

      
      <section className="mt-6">
        <h2 className="text-sm font-medium text-zinc-300">Bills</h2>
        <ul className="mt-2 space-y-2">
          {results.bills.length ? results.bills.map(b=>(
            <li key={b.id} className="card p-4">
              <BillListItem bill={{ id:b.id, title:b.title, predictedPass:b.predictedPass ?? 0, youFollow:false }} />
            </li>
          )) : <li className="card p-4">No bill results.</li>}
        </ul>
      </section>

      
      <section className="mt-6">
        <h2 className="text-sm font-medium text-zinc-300">MPs</h2>
        <ul className="mt-2 grid gap-2 md:grid-cols-2">
          {results.mps.length ? results.mps.map(m=>(
            <li key={m.id} className="card p-4">
              <div className="text-base font-semibold">{m.name}</div>
              <div className="text-xs text-zinc-400">{m.party || "—"}</div>
              <a href={"/mps/"+m.id} className="mt-3 inline-flex items-center text-sm text-emerald-400 underline underline-offset-4 hover:text-emerald-300">
                View profile →
              </a>
            </li>
          )) : <li className="card p-4">No MP results.</li>}
        </ul>
      </section>

      
      <section className="mt-6">
        <h2 className="text-sm font-medium text-zinc-300">News</h2>
        <div className="mt-2 grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {results.articles.length ? results.articles.map(a=>(
            <ClusterCard key={a.id} cluster={{ id:a.id, title:a.title, stance:a.stance || "Neutral", storyCount:1, summary:"", tags:[] }} />
          )) : <div className="card p-4">No news results.</div>}
        </div>
      </section>
    </main>
  );
}
